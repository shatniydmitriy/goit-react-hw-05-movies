{"version":3,"file":"static/js/325.40c66b3f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/movieDetailsPage.module.css?c394","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/styles/services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnGoBack\":\"movieDetailsPage_btnGoBack__Hw6dj\",\"wrapperOneFilm\":\"movieDetailsPage_wrapperOneFilm__RBEGz\",\"wrapperDetails\":\"movieDetailsPage_wrapperDetails__-Hfn-\",\"titleDetails\":\"movieDetailsPage_titleDetails__6vpwO\",\"genresList\":\"movieDetailsPage_genresList__r33m3\",\"genresItems\":\"movieDetailsPage_genresItems__D-dY4\",\"wrapperMoreInfo\":\"movieDetailsPage_wrapperMoreInfo__V+R3J\",\"additionalList\":\"movieDetailsPage_additionalList__VfGHx\",\"details\":\"movieDetailsPage_details__Ye5j0\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport Loader from 'shared/styles/Loader/loader';\n\nimport { getDetailsMovie } from 'shared/styles/services/movieApi';\nimport PropTypes from 'prop-types';\n\nimport css from '../MovieDetailsPage/movieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movies, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [date, setDate] = useState('');\n  const { movieId } = useParams();\n\n  // ф-я navigate примусово змінює адресу\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  //  якщо state не null  і там є поле from - записуємо його - інакше головна сторінка\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchDetailsMovie = async () => {\n      try {\n        setLoading(true);\n        const result = await getDetailsMovie(movieId);\n        setMovies(result);\n        setGenres(result.genres);\n        setDate(result.release_date);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDetailsMovie();\n  }, [movieId]);\n\n  const goBack = () => navigate(from);\n\n  const elements = genres.map(({ name, id }) => (\n    <li key={id} className={css.genresItems}>\n      {name}\n    </li>\n  ));\n  const year = new Date(date).getFullYear();\n  const { poster_path, original_title, overview } = movies;\n\n  return (\n    <>\n      <button className={css.btnGoBack} onClick={goBack} type=\"button\">\n        <HiArrowNarrowLeft /> Go back\n      </button>\n      {loading && <Loader />}\n      {error && <p>Error</p>}\n      {movies && (\n        <div className={css.wrapperOneFilm}>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/` + poster_path\n                : 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png'\n            }\n            width=\"300\"\n            height=\"450\"\n            alt={original_title}\n            loading=\"lazy\"\n          />\n          <div className={css.wrapperDetails}>\n            <h2>\n              {original_title} <span>({year})</span>\n            </h2>\n            <p>User score: {((movies.vote_average / 10) * 100).toFixed(0)}%</p>\n            <h3 className={css.titleDetails}>Overview</h3>\n            <p>{overview}</p>\n            <h3 className={css.titleDetails}>Genres</h3>\n            <ul className={css.genresList}>{elements}</ul>\n          </div>\n        </div>\n      )}\n      <div className={css.wrapperMoreInfo}>\n        <p>Additional information</p>\n        <ul className={css.additionalList}>\n          <li>\n            <Link className={css.details} to=\"cast\" state={{ from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default MovieDetailsPage;\n\nMovieDetailsPage.defaultProps = {\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '4a2018560b79424f21a897c5cf387007',\n    language: 'en-US',\n  },\n});\n\nexport const getPopularMovie = async (page = 1) => {\n  const { data } = await instance.get(\n    '/trending/movie/day',\n    {\n      params: {\n        page,\n      },\n    }\n  );\n  return data.results;\n};\n\nexport const getDetailsMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  \n  return data.results;\n};"],"names":["MovieDetailsPage","useState","movies","setMovies","loading","setLoading","error","setError","genres","setGenres","date","setDate","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchDetailsMovie","getDetailsMovie","result","release_date","elements","map","name","id","className","css","year","Date","getFullYear","poster_path","original_title","overview","onClick","type","src","width","height","alt","vote_average","toFixed","to","defaultProps","PropTypes","isRequired","instance","axios","baseURL","params","api_key","language","getPopularMovie","page","get","data","results","getSearchMovie","query","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}